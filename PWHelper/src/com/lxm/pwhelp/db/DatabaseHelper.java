/**
 * Generated by smali2java 1.0.0.558
 * Copyright (C) 2013 Hensence.com
 */

package com.lxm.pwhelp.db;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;

import com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper;
import com.j256.ormlite.dao.Dao;
import com.j256.ormlite.support.ConnectionSource;
import com.j256.ormlite.table.TableUtils;
import com.lxm.pwhelp.bean.PWGroup;
import com.lxm.pwhelp.bean.PWItem;
import com.lxm.pwhelp.bean.PWSetting;

/**
 * database helper
 * 
 * @author lianxiao
 * @version 2015-5-15 15:27:40
 */
public class DatabaseHelper extends OrmLiteSqliteOpenHelper {

	//name of the database file for your application
	// change to something appropriate for your app
	private static final String TABLE_NAME = "sqlite-test.db";
	
	//any time you make changes to your database objects, you may have to increase the database version
	private static final int DATABASE_VERSION = 4;

	private Map<String, Dao> daos = new HashMap<String, Dao>();
	
	private static DatabaseHelper instance;

	private DatabaseHelper(Context context) {
		super(context, TABLE_NAME, null, DATABASE_VERSION);
	}

	@Override
	public void onCreate(SQLiteDatabase database,
			ConnectionSource connectionSource) {
		try {
			TableUtils.createTable(connectionSource, PWItem.class);
			TableUtils.createTable(connectionSource, PWGroup.class);
			TableUtils.createTable(connectionSource, PWSetting.class);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void onUpgrade(SQLiteDatabase database,
			ConnectionSource connectionSource, int oldVersion, int newVersion) {
		try {
			TableUtils.dropTable(connectionSource, PWItem.class, true);
			TableUtils.dropTable(connectionSource, PWGroup.class, true);
			TableUtils.dropTable(connectionSource, PWSetting.class, true);
			onCreate(database, connectionSource);
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * get Helper single instance
	 * @param context
	 * @return instance
	 */
	public static synchronized DatabaseHelper getHelper(Context context){
		context = context.getApplicationContext();
		if (instance == null) {
			synchronized (DatabaseHelper.class){
				if(instance == null){
					instance = new DatabaseHelper(context);
				}
			}
		}
		return instance;
	}
	
	public synchronized Dao getDao(Class clazz) throws SQLException {
		Dao dao = null;
		String className = clazz.getSimpleName();
		
		if (daos.containsKey(className)){
			dao = daos.get(className);
		}
		if (dao == null){
			dao = super.getDao(clazz);
			daos.put(className, dao);
		}
		return dao;
	}
	
	/**
	 * release sources
	 */
	@Override
	public void close(){
		super.close();
		
		for(String key : daos.keySet()){
			Dao dao = daos.get(key);
			dao = null;
		}
	}
}